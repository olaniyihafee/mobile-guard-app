let mongoose,express,session,connectRedis,Redis,MONGO_URI,MONGO_OPTIONS,REDIS_OPTIONS,APP_PORT;_2dd‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_2dd‍.w("express",[["default",["express"],function(v){express=v}]]);_2dd‍.w("express-session",[["default",["session"],function(v){session=v}]]);_2dd‍.w("connect-redis",[["default",["connectRedis"],function(v){connectRedis=v}]]);_2dd‍.w("ioredis",[["default",["Redis"],function(v){Redis=v}]]);_2dd‍.w("./src/config/index",[["MONGO_URI",["MONGO_URI"],function(v){MONGO_URI=v}],["MONGO_OPTIONS",["MONGO_OPTIONS"],function(v){MONGO_OPTIONS=v}],["REDIS_OPTIONS",["REDIS_OPTIONS"],function(v){REDIS_OPTIONS=v}],["APP_PORT",["APP_PORT"],function(v){APP_PORT=v}]]);






(async () => {
  await mongoose.connect(MONGO_URI, MONGO_OPTIONS)

  const RedisStore = connectRedis(session)

  const client = new Redis(REDIS_OPTIONS)

  const store = new RedisStore({ client })

  const app = createApp(store)

  app.listen(APP_PORT, () => console.log(`http://localhost:${APP_PORT}`))
})()
